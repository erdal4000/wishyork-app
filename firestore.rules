rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // --- USERS ---
    match /users/{userId} {
      allow read: if true;
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if false; 
    }
    
    // --- USERNAMES ---
    match /usernames/{username} {
      allow read: if true;
      allow create: if request.auth != null; 
      allow update: if false;
      allow delete: if request.auth != null && isOwner(resource.data.uid);
    }
    
    // --- POSTS ---
    match /posts/{postId} {
      allow read: if true;
      allow create: if isOwner(request.resource.data.authorId);
      allow update: if isOwner(resource.data.authorId);
      allow delete: if isOwner(resource.data.authorId);

      // Comments on Posts
      match /comments/{commentId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update: if isOwner(resource.data.authorId);
        allow delete: if isOwner(resource.data.authorId) || isOwner(get(/databases/$(database)/documents/posts/$(postId)).data.authorId);
      }
    }

    // --- WISHLISTS ---
    match /wishlists/{wishlistId} {
      allow read: if true;
      allow create: if isOwner(request.resource.data.authorId);
      allow update: if isOwner(resource.data.authorId);
      allow delete: if isOwner(resource.data.authorId);

      // Items within a Wishlist
      match /items/{itemId} {
        allow read: if true;
        allow create: if isOwner(get(/databases/$(database)/documents/wishlists/$(wishlistId)).data.authorId);
        // Allow anyone logged in to update, the logic is handled in the UI
        allow update: if request.auth != null;
        allow delete: if isOwner(get(/databases/$(database)/documents/wishlists/$(wishlistId)).data.authorId);
      }

      // Comments on Wishlists
      match /comments/{commentId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update: if isOwner(resource.data.authorId);
        allow delete: if isOwner(resource.data.authorId) || isOwner(get(/databases/$(database)/documents/wishlists/$(wishlistId)).data.authorId);
      }
    }
  }
}
