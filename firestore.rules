rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users Collection
    // - Logged-in users can read anyone's profile (to see profile pages).
    // - A user can only write/update their own document.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write, update, delete: if request.auth.uid == userId;
    }

    // Usernames Collection
    // - Used for ensuring unique usernames.
    // - A user can only create a username document if their UID matches the one being set
    //   and if they are creating their own user document at the same time.
    match /usernames/{username} {
       allow read: if request.auth != null;
       allow create: if request.auth.uid == request.resource.data.uid;
    }

    // Wishlists Collection
    // - Anyone can read public wishlists.
    // - Friends can read friends-only wishlists (Requires more complex rules, placeholder).
    // - Only the author can read their private wishlists.
    // - Only the author can create, update, or delete their own wishlists.
    match /wishlists/{wishlistId} {
      allow read: if resource.data.privacy == 'public'
                  || (resource.data.privacy == 'private' && resource.data.authorId == request.auth.uid)
                  || (resource.data.privacy == 'friends' && resource.data.authorId == request.auth.uid); // Friend logic needs to be added
      allow create, update, delete: if request.auth.uid == resource.data.authorId;

        // Items sub-collection
        match /items/{itemId} {
            allow read: if get(/databases/$(database)/documents/wishlists/$(wishlistId)).data.privacy == 'public'
                        || get(/databases/$(database)/documents/wishlists/$(wishlistId)).data.authorId == request.auth.uid;
            allow create, update, delete: if get(/databases/$(database)/documents/wishlists/$(wishlistId)).data.authorId == request.auth.uid;
        }
    }
    
    // Posts Collection
    // - Logged-in users can read all posts.
    // - Users can only create/update/delete their own posts.
     match /posts/{postId} {
      allow read: if request.auth != null;
      allow create, update, delete: if request.auth.uid == request.resource.data.authorId;
    }
  }
}
