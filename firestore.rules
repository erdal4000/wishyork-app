
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users can read their own profile, and anyone can read anyone's basic profile
    match /users/{userId} {
      allow read: if true;
      allow write: if isOwner(userId);
    }
    
    // Usernames must be unique. Only the owner of the username can create it.
    match /usernames/{username} {
      allow read: if true;
      allow create: if isOwner(request.resource.data.uid);
    }

    // Wishlists security
    match /wishlists/{wishlistId} {
      // Anyone can read public wishlists
      allow read: if resource.data.privacy == 'public' || isOwner(resource.data.authorId);
      
      // A user can create a wishlist if they are logged in and the authorId matches their own UID
      allow create: if request.auth != null && isOwner(request.resource.data.authorId);

      // A user can update or delete a wishlist only if they are the owner
      allow update, delete: if isOwner(resource.data.authorId);
      
      // Items within a wishlist
      match /items/{itemId} {
        // Anyone who can view the wishlist can view its items
        allow read: if get(/databases/$(database)/documents/wishlists/$(wishlistId)).data.privacy == 'public' || isOwner(get(/databases/$(database)/documents/wishlists/$(wishlistId)).data.authorId);
        
        // The owner of the wishlist can add, update, or delete items
        allow create, update, delete: if isOwner(get(/databases/$(database)/documents/wishlists/$(wishlistId)).data.authorId);
      }
    }

    // Posts security
    match /posts/{postId} {
      // Anyone can read any post
      allow read: if true;
      // Users can create posts if they are logged in and are the author
      allow create: if request.auth != null && isOwner(request.resource.data.authorId);
      // Users can only update/delete their own posts
      allow update, delete: if isOwner(resource.data.authorId);
    }
  }
}
