rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Kullanıcılar koleksiyonu kuralları
    match /users/{userId} {
      // Oturum açmış kullanıcılar, başka kullanıcıların profilini okuyabilir.
      allow read: if request.auth != null;

      // Kullanıcılar sadece kendi belgelerini güncelleyebilir.
      // Ancak, başkalarının kendi takipçi listesini (followers) güncellemesine
      // izin veren özel bir durum ekliyoruz.
      allow update: if request.auth.uid == userId ||
                       (request.resource.data.diff(resource.data).affectedKeys()
                         .hasOnly(['followers', 'followersCount']));

      // Kullanıcılar sadece kendi belgelerini oluşturabilir.
      allow create: if request.auth.uid == userId;
    }

    // Kullanıcı adlarının benzersizliğini sağlamak için kullanılan koleksiyon.
    match /usernames/{username} {
      allow read: if true;
      allow create: if request.auth != null;
    }

    // Post'lar koleksiyonu
    match /posts/{postId} {
      // Oturum açmış her kullanıcı post'ları okuyabilir. Bu, 'in' sorgularının çalışması için gereklidir.
      allow read: if request.auth != null;

      // Kullanıcılar sadece kendi post'larını oluşturabilir, silebilir.
      allow create, delete: if request.auth.uid == resource.data.authorId;

      // Kullanıcılar sadece post'un 'likedBy' ve 'likes' alanlarını güncelleyebilir.
      allow update: if request.auth != null &&
                       request.resource.data.diff(resource.data).affectedKeys()
                         .hasOnly(['likedBy', 'likes']);
    }

    // Wishlist'ler koleksiyonu
    match /wishlists/{wishlistId} {
      // Oturum açmış kullanıcılar wishlist'leri okuyabilir (Gizlilik, istemci tarafında yönetilir).
      allow read: if request.auth != null;

      // Kullanıcılar sadece kendi wishlist'lerini oluşturabilir, güncelleyebilir, silebilir.
      allow create, update, delete: if request.auth.uid == request.resource.data.authorId;

      // Wishlist içindeki item'lar
      match /items/{itemId} {
        allow read: if request.auth != null;
        // Wishlist sahibi item ekleyebilir/silebilir.
        allow create, delete: if get(/databases/$(database)/documents/wishlists/$(wishlistId)).data.authorId == request.auth.uid;

        // Oturum açmış herhangi bir kullanıcı bir item'ı güncelleyebilir (reserve, fulfill vb. için).
        allow update: if request.auth != null;
      }
    }
  }
}
