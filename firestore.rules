
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isOwner(wishlistId) {
      return get(/databases/$(database)/documents/wishlists/$(wishlistId)).data.authorId == request.auth.uid;
    }

    function isPublic(wishlistId) {
      return get(/databases/$(database)/documents/wishlists/$(wishlistId)).data.privacy == 'public';
    }

    // Rules for 'users' collection
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth.uid == userId;
    }

    // Rules for 'usernames' collection
    match /usernames/{username} {
      allow read: if true;
      allow create: if request.auth.uid != null;
    }

    // Rules for 'posts' collection
    match /posts/{postId} {
      allow read: if true;
      allow create: if request.auth.uid == request.resource.data.authorId;
      allow delete: if request.auth.uid == resource.data.authorId;
      allow update: if request.auth.uid == resource.data.authorId;
    }

    // Rules for 'wishlists' collection
    match /wishlists/{wishlistId} {
      allow read: if request.auth != null && (isOwner(wishlistId) || isPublic(wishlistId));
      allow create: if request.auth.uid == request.resource.data.authorId;
      allow delete: if isOwner(wishlistId);
      allow update: if isOwner(wishlistId);
    }
    
    // Rules for 'items' subcollection
    match /wishlists/{wishlistId}/items/{itemId} {
      allow read: if isOwner(wishlistId) || isPublic(wishlistId);
      allow create: if isOwner(wishlistId);
      allow delete: if isOwner(wishlistId);
      // SIMPLIFIED RULE: Allow any logged-in user to update an item.
      // The security logic is now enforced in the client-side code,
      // which only shows update buttons for public lists to non-owners.
      allow update: if request.auth != null;
    }

    // Rules for comments on posts and wishlists
    match /{collection}/{docId}/comments/{commentId} {
      // Allow anyone who can read the parent document to read the comments.
      // Assuming public posts/wishlists are readable by anyone logged in.
      allow read: if request.auth != null; 
      allow create: if request.auth.uid == request.resource.data.authorId;
      allow delete: if request.auth.uid == resource.data.authorId;
      allow update: if request.auth.uid == resource.data.authorId; // For likes etc.
    }
  }
}
