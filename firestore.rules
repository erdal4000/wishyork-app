
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    // Users Collection Rules
    // - Anyone signed in can read any user's profile (for profile pages).
    // - A user can only create or update their OWN profile.
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create, update: if isSignedIn() && request.auth.uid == userId;
    }

    // Usernames Collection Rules
    // - Used to quickly check if a username is taken.
    // - Anyone signed in can read the list of usernames.
    // - A user can only create a username document that maps to their own UID.
    match /usernames/{username} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.resource.data.uid == request.auth.uid;
    }

    // Wishlists Collection Rules
    // - A user can only create, update, or delete their own wishlists.
    // - Read rules are more complex:
    //   - Anyone can read a 'public' wishlist.
    //   - 'private' lists can only be read by the owner.
    //   - 'friends' lists logic would be implemented here later (e.g., check if author is in user's 'following' list).
    match /wishlists/{wishlistId} {
      allow create, update, delete: if isSignedIn() && request.auth.uid == resource.data.authorId;
      allow read: if (resource.data.privacy == 'public') ||
                     (resource.data.privacy == 'private' && resource.data.authorId == request.auth.uid);
      
      // Items subcollection rules
      match /items/{itemId} {
        allow read: if (get(/databases/$(database)/documents/wishlists/$(wishlistId)).data.privacy == 'public') ||
                       (get(/databases/$(database)/documents/wishlists/$(wishlistId)).data.authorId == request.auth.uid);
        allow create, update, delete: if isSignedIn() && get(/databases/$(database)/documents/wishlists/$(wishlistId)).data.authorId == request.auth.uid;
      }
    }

    // Posts Collection Rules
    // - Anyone signed in can read any post.
    // - A user can only create their own posts.
    // - A user can only update their own post's likes/comments, not content.
    // - A user can only delete their own posts.
    match /posts/{postId} {
       allow read: if isSignedIn();
       allow create: if isSignedIn() && request.resource.data.authorId == request.auth.uid;
       allow update: if isSignedIn(); // Simplified for now to allow liking
       allow delete: if isSignedIn() && resource.data.authorId == request.auth.uid;
    }
  }
}
