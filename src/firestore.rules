rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // --- COLLECTION GROUP RULES (For Feed & Search) ---
    match /{path=**}/posts/{postId} {
      allow list: if isSignedIn();
    }

    match /{path=**}/wishlists/{wishlistId} {
      allow list: if isSignedIn();
    }
    

    // --- COLLECTION-SPECIFIC RULES ---
    
    match /users/{userId} {
      // Any signed-in user can search/list users for the search bar.
      allow list: if isSignedIn();
      allow get, update: if isOwner(userId);
      allow create: if isSignedIn();
      allow delete: if false; // Generally, don't allow users to delete their accounts this way.
    }

    match /usernames/{username} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && isOwner(request.resource.data.uid);
    }
    
    match /posts/{postId} {
        allow get: if isSignedIn();
        allow create: if isSignedIn() && isOwner(request.resource.data.authorId);
        allow update, delete: if isSignedIn() && isOwner(resource.data.authorId);
    }

    match /wishlists/{wishlistId} {
      allow get: if (resource.data.privacy == 'public') || (isSignedIn() && isOwner(resource.data.authorId));
      allow create: if isSignedIn() && isOwner(request.resource.data.authorId);
      allow update, delete: if isSignedIn() && isOwner(resource.data.authorId);
    }
    
    // Sub-collections
    match /wishlists/{wishlistId}/items/{itemId} {
      allow read, write: if isSignedIn();
    }
    
    match /wishlists/{wishlistId}/comments/{commentId} {
        allow read, write: if isSignedIn();
    }
    
    match /posts/{postId}/comments/{commentId} {
        allow read, write: if isSignedIn();
    }
  }
}