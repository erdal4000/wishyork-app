rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // USERNAME a document containing a single 'uid' field
    match /usernames/{username} {
      allow read;
      allow create: if isOwner(request.resource.data.uid);
      allow update: if isOwner(resource.data.uid);
      allow delete: if isOwner(resource.data.uid);
    }
    
    // USER document
    match /users/{userId} {
      allow read;
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);

      match /bookmarks/{bookmarkId} {
        allow read, write: if isOwner(userId);
      }
    }
    
    // WISHLIST document
    match /wishlists/{wishlistId} {
      allow read: if isOwner(resource.data.authorId) || resource.data.privacy == 'public';
      allow create: if isOwner(request.resource.data.authorId);
      allow update, delete: if isOwner(resource.data.authorId);

      match /comments/{commentId} {
        allow read;
        allow create: if request.auth != null;
        allow update, delete: if isOwner(get(/databases/$(database)/documents/wishlists/$(wishlistId)/comments/$(commentId)).data.authorId);
      }
    }
    
    // WISHLIST ITEMS subcollection
    match /wishlists/{wishlistId}/items/{itemId} {
      allow read: if get(/databases/$(database)/documents/wishlists/$(wishlistId)).data.authorId == request.auth.uid || get(/databases/$(database)/documents/wishlists/$(wishlistId)).data.privacy == 'public';
      allow create, delete: if get(/databases/$(database)/documents/wishlists/$(wishlistId)).data.authorId == request.auth.uid;
      allow update: if request.auth != null && (get(/databases/$(database)/documents/wishlists/$(wishlistId)).data.authorId == request.auth.uid || get(/databases/$(database)/documents/wishlists/$(wishlistId)).data.privacy == 'public');
    }

    // POSTS document
    match /posts/{postId} {
      allow read;
      allow create: if isOwner(request.resource.data.authorId);
      allow update, delete: if isOwner(resource.data.authorId);
      
      match /comments/{commentId} {
        allow read;
        allow create: if request.auth != null;
        allow update, delete: if isOwner(get(/databases/$(database)/documents/posts/$(postId)/comments/$(commentId)).data.authorId);
      }
    }
  }
}