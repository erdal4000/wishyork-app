rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // --- COLLECTION GROUP & BROAD READ RULES ---

    match /{path=**}/posts/{postId} {
      allow list: if isSignedIn();
    }

    match /{path=**}/wishlists/{wishlistId} {
      allow list: if isSignedIn();
    }
    
    // Allow any signed-in user to search/list users for the search bar.
    match /users/{userId} {
       allow list: if isSignedIn();
       allow get: if isSignedIn();
       allow create: if isSignedIn() && isOwner(userId);
       allow update, delete: if isOwner(userId);
    }
    

    // --- SINGLE DOCUMENT & WRITE RULES ---

    match /users/{userId} {
      // These are redefined for clarity on single-document access.
      // A user can read any single profile, but only write to their own.
      allow get: if isSignedIn();
      allow create: if isSignedIn() && isOwner(userId);
      allow update, delete: if isOwner(userId);
    }

    match /usernames/{username} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.uid;
    }

    match /posts/{postId} {
      allow get: if isSignedIn();
      allow create: if isSignedIn() && isOwner(request.resource.data.authorId);
      allow update, delete: if isSignedIn() && isOwner(resource.data.authorId);
    }

    match /wishlists/{wishlistId} {
      allow get: if resource.data.privacy == 'public' || (isSignedIn() && isOwner(resource.data.authorId));
      allow create: if isSignedIn() && isOwner(request.resource.data.authorId);
      allow update, delete: if isSignedIn() && isOwner(resource.data.authorId);
    }


    // --- SUB-COLLECTION RULES ---

    match /wishlists/{wishlistId}/items/{itemId} {
      allow read, write: if isSignedIn();
    }

    match /wishlists/{wishlistId}/comments/{commentId} {
      allow read, write: if isSignedIn();
    }

    match /posts/{postId}/comments/{commentId} {
      allow read, write: if isSignedIn();
    }
  }
}
