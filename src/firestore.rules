
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    match /users/{userId} {
      allow read;
      allow write: if isSignedIn() && request.auth.uid == userId;
    }

    match /usernames/{username} {
      allow read;
      allow create: if isSignedIn();
    }

    match /posts/{postId} {
      allow read, create: if isSignedIn();
      allow update, delete: if isSignedIn() && resource.data.authorId == request.auth.uid;
      
      match /comments/{commentId} {
        allow read, create: if isSignedIn();
        allow update, delete: if isSignedIn() && request.auth.uid == resource.data.authorId;
      }
    }
    
    match /wishlists/{wishlistId} {
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && resource.data.authorId == request.auth.uid;
      allow read: if resource.data.privacy == 'public' || (isSignedIn() && request.auth.uid == resource.data.authorId);
      
      match /items/{itemId} {
        allow read, create, update, delete: if isSignedIn();
      }

      match /comments/{commentId} {
        allow read, create: if isSignedIn();
        allow update, delete: if isSignedIn() && request.auth.uid == resource.data.authorId;
      }
    }

    // --- COLLECTION GROUP RULES FOR FEED ---
    // This allows the backend to query across all 'posts' and 'wishlists' collections.
    // The code logic then filters by followed users.
    match /{path=**}/posts/{postId} {
      allow list: if isSignedIn();
    }

    match /{path=**}/wishlists/{wishlistId} {
      allow list: if isSignedIn();
    }
  }
}
