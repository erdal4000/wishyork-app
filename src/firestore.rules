rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Kullanıcılar koleksiyonu kuralları
    match /users/{userId} {
      allow read: if request.auth != null;

      // Kullanıcılar kendi belgelerini güncelleyebilir VEYA
      // başka bir kullanıcı, o kullanıcının sadece 'followers' ve 'followersCount' alanlarını
      // değiştirebilir (takip etme/bırakma işlevi için).
      allow update: if request.auth.uid == userId ||
                       (request.resource.data.diff(resource.data).affectedKeys()
                         .hasOnly(['followers', 'followersCount']) && request.auth != null);
                         
      allow create: if request.auth.uid == userId;
    }

    // Kullanıcı adlarının benzersizliğini sağlamak için kullanılan koleksiyon.
    match /usernames/{username} {
      allow read: if true;
      allow create: if request.auth != null;
    }

    // Post'lar koleksiyonu
    match /posts/{postId} {
      allow read: if request.auth != null;
      allow create, delete: if request.auth.uid == request.resource.data.authorId;
      allow update: if request.auth != null &&
                       request.resource.data.diff(resource.data).affectedKeys()
                         .hasOnly(['likedBy', 'likes']);
    }

    // Wishlist'ler ve içindeki item'lar için kurallar
    match /wishlists/{wishlistId} {
      allow read: if true;
      allow create, update, delete: if request.auth.uid == request.resource.data.authorId;

      match /items/{itemId} {
        allow read: if true;
        allow create, delete: if get(/databases/$(database)/documents/wishlists/$(wishlistId)).data.authorId == request.auth.uid;
        allow update: if request.auth != null;
      }
    }
  }
}
